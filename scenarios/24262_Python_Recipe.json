{
  "projectKey": "EVERYTHING",
  "id": "24262_Python_Recipe",
  "type": "step_based",
  "name": "24262 Python Recipe",
  "active": false,
  "versionTag": {
    "versionNumber": 62,
    "lastModifiedBy": {
      "login": "admin"
    },
    "lastModifiedOn": 1633723848755
  },
  "checklists": {
    "checklists": []
  },
  "delayedTriggersBehavior": {
    "delayWhileRunning": true,
    "squashDelayedTriggers": true,
    "suppressTriggersWhileRunning": true
  },
  "tags": [],
  "triggers": [],
  "reporters": [
    {
      "active": true,
      "messaging": {
        "type": "dataset-scenario",
        "configuration": {
          "projectKey": "EVERYTHING",
          "datasetName": "aaa123",
          "message": "{\n\t\"col1\":\"${RecordCount}\",\n\t\"col2\":\"${triggerName}\"\n}"
        }
      },
      "id": "9fHsyGWU",
      "name": "send to dataset test",
      "runConditionEnabled": true,
      "runCondition": "outcome \u003d\u003d \u0027SUCCESS\u0027",
      "phase": "START",
      "variablesCode": "import json\n\n\n\n# compute your additional variables from the list of report items \n# and return them as a dictionary.\ndef get_variables(items_json, scenario_run_json, step_run_output_json):\n    with open(\"/Users/rendo/Library/DataScienceStudio/dss_home/config/projects/EVERYTHING/variables.json\") as json_file:\n        data \u003d json.load(json_file)\n        print(data)\n    return {\"RecordCount\" : data[\u0027month\u0027]}"
    },
    {
      "active": true,
      "messaging": {
        "type": "mail-scenario",
        "configuration": {
          "channelId": "my_smtp",
          "subject": "DSS scenario ${scenarioName}: ${RecordCount}",
          "recipient": "roy.endo@dataiku.com",
          "sendAsHTML": false,
          "attachments": [],
          "messageSource": "TEMPLATE_FILE",
          "templateFormat": "FREEMARKER",
          "templateName": "default.ftl"
        }
      },
      "id": "o930LDEO",
      "runConditionEnabled": true,
      "runCondition": "outcome \u003d\u003d \u0027SUCCESS\u0027",
      "phase": "END",
      "variablesCode": "import json\n\n# compute your additional variables from the list of report items \n# and return them as a dictionary.\ndef get_variables(items_json, scenario_run_json, step_run_output_json):\n    with open(\"/Users/rendo/Library/DataScienceStudio/dss_home/config/projects/EVERYTHING/variables.json\") as json_file:\n        data \u003d json.load(json_file)\n        print(data)\n    return {\"RecordCount\" : data[\u0027recordCount\u0027]}"
    }
  ],
  "params": {
    "steps": [
      {
        "id": "comp_metrics_d_EVERYTHING_aaaaa",
        "type": "compute_metrics",
        "name": "Compute Record Count",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "computes": [
            {
              "type": "DATASET",
              "itemId": "EVERYTHING_aaaaa",
              "partitionsSpec": ""
            }
          ],
          "proceedOnFailure": false
        }
      },
      {
        "id": "custom_python_VW4jrZyau7FnzU9yUyWgUg",
        "type": "custom_python",
        "name": "Step #2",
        "runConditionType": "RUN_IF_STATUS_MATCH",
        "runConditionStatuses": [
          "SUCCESS",
          "WARNING"
        ],
        "runConditionExpression": "",
        "resetScenarioStatus": false,
        "delayBetweenRetries": 10,
        "maxRetriesOnFail": 0,
        "params": {
          "script": "import dataiku\nclient \u003d dataiku.api_client()\nprojects \u003d  client.get_project(\"EVERYTHING\")\ndataset \u003d projects.get_dataset(\"dataset1\")\nmetric_edit \u003d projects.get_variables()\n        \nmetrics \u003d dataset.get_last_metric_values()\nfor metric in metrics.raw[\u0027metrics\u0027]:\n    try:\n        if (metric[\u0027displayedAsMetric\u0027] \u003d\u003d True):\n            recordCount \u003d metric[\u0027lastValues\u0027][0][\u0027value\u0027]\n            metric_edit[\u0027standard\u0027][\u0027recordCount\u0027] \u003d recordCount\n            projects.set_variables(metric_edit)\n    except:\n        error \u003d \"Metrics not built yet!\"\n",
          "envSelection": {
            "envMode": "INHERIT"
          },
          "proceedOnFailure": false
        }
      }
    ]
  },
  "automationLocal": false,
  "customFields": {}
}