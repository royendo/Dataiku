/* This file is the descriptor for the Custom jython step celta-clean-string-column */
{
    "meta" : {
        // label: name of the data prep step as displayed, should be short
        "label": "CELTA data cleansing - encoding converter",

        // description: longer string to help end users understand what this data prep step does
        "description": "CELTA processor that changes column encoding to latin1, removing characters that cannot be converted.
        This is usefull when you have text data that comes with unicode or utf-8 characters that cannot be loaded to database columns with character set = latin",

        // icon: must be one of the FontAwesome 3.2.1 icons, complete list here at https://fontawesome.com/v3.2.1/icons/
        "icon": "icon-file-text"
    },

    /*
     * the processor mode, dictating what output is expected:
     * - CELL : the code outputs a value
     * - ROW : the code outputs a row
     * - ROWS : the code outputs an array of rows
     */
    "mode": "ROW",

    /* params:
    DSS will generate a formular from this list of requested parameters.
    Your component code can then access the value provided by users using the "name" field of each parameter.

    Available parameter types include:
    STRING, INT, DOUBLE, BOOLEAN, DATE, SELECT, TEXTAREA, MAP, PRESET and others.

    For the full list and for more details, see the documentation: https://doc.dataiku.com/dss/latest/plugins/reference/params.html
    */
    "params": [
        {
            "name": "input_columns",
            "label": "Input columns",
            "type": "COLUMNS",
            "description": "Columns to clean",
            "columnRole": "main",
            "mandatory": true
        },
        {
            "name": "trim_column",
            "label": "Trim column",
            "type": "BOOLEAN",
            "description": "If enabled trims whitespace from column values at the start and end of the string.",
            "defaultValue": true
        },
        {
            "name": "add_flag_column",
            "label": "Add a flag column",
            "type": "BOOLEAN",
            "description": "If enabled adds a flag column for rows with bad data.",
            "defaultValue": false
        },
        {
            "name": "flag_name",
            "label": "Flag name",
            "type": "STRING",
            "description": "Name of flag column",
            "defaultValue": "Cleansed flag",
            "visibilityCondition" : "model.flag_column"
        }
    ]
}
